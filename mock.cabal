name: mock
version: 0.1
cabal-version: 2.0
build-type: Simple

library
  hs-source-dirs: src
  default-language: Haskell2010
  if impl(ghcjs)
    buildable: False
  default-extensions:
    BangPatterns
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveTraversable
    DerivingStrategies
    EmptyCase
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    GeneralizedNewtypeDeriving
    ImportQualifiedPost
    InstanceSigs
    KindSignatures
    LambdaCase
    MultiParamTypeClasses
    NamedFieldPuns
    NumericUnderscores
    OverloadedStrings
    PartialTypeSignatures
    PolyKinds
    QuasiQuotes
    RankNTypes
    RecursiveDo
    ScopedTypeVariables
    StandaloneDeriving
    TemplateHaskell
    TypeApplications
    TypeFamilies
    TypeOperators
    UndecidableInstances
    ViewPatterns
  build-depends: base
               , aeson
               , bytestring
               , directory
               , filepath
               , http-client
               , http-client-tls
               , http-types
               , optparse-applicative
               , process
               , text
  exposed-modules:
    Beegfs.Mock
    Beegfs.Options
    Beegfs.Api
    Zfs.Mock
    Zfs.Options
    Zfs.Api
  ghc-options: -Wall -O1 -fno-show-valid-hole-fits
               -j
               +RTS -A32m -RTS
               -- unsafe code
               -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wmissing-fields
               -Werror=incomplete-record-updates -Werror=incomplete-uni-patterns -Werror=partial-fields -Werror=missing-fields
               -- unneeded code
               -Widentities -Wredundant-constraints
               -- Partial type signatures are OK
               -Wno-partial-type-signatures
               -- Enable build caching
               -fwrite-interface -fignore-interface-pragmas

              -- for now
               -Wno-unused-imports
  if impl(ghc >= 8.8)
    ghc-options:
               -Wmissing-deriving-strategies
               -fmax-simplifier-iterations=0
               -fno-specialise

executable beegfs-ctl
  main-is: beegfs-ctl.hs
  hs-source-dirs: src-bin
  default-language: Haskell2010
  ghc-options: -Wall -O1 -fno-show-valid-hole-fits -threaded
               -j
               +RTS -A32m -RTS
               -- unsafe code
               -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wmissing-fields
               -Werror=incomplete-record-updates -Werror=incomplete-uni-patterns -Werror=partial-fields -Werror=missing-fields
               -- unneeded code
               -Widentities -Wredundant-constraints
               -- Enable build caching
               -fwrite-interface -fignore-interface-pragmas
  if impl(ghc >= 8.8)
    ghc-options:
               -Wmissing-deriving-strategies
  if impl(ghcjs)
    buildable: False
  build-depends: base
               , mock

executable zfs
  main-is: zfs.hs
  hs-source-dirs: src-bin
  default-language: Haskell2010
  ghc-options: -Wall -O1 -fno-show-valid-hole-fits -threaded
               -j
               +RTS -A32m -RTS
               -- unsafe code
               -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wmissing-fields
               -Werror=incomplete-record-updates -Werror=incomplete-uni-patterns -Werror=partial-fields -Werror=missing-fields
               -- unneeded code
               -Widentities -Wredundant-constraints
               -- Enable build caching
               -fwrite-interface -fignore-interface-pragmas
  if impl(ghc >= 8.8)
    ghc-options:
               -Wmissing-deriving-strategies
  if impl(ghcjs)
    buildable: False
  build-depends: base
               , mock

test-suite mock-test
    type:                exitcode-stdio-1.0
    hs-source-dirs:      test
    main-is:            Spec.hs
    other-modules:      BeegfsOptionsSpec
                      , ZfsOptionsSpec
    build-depends:      base
                      , mock
                      , hspec >= 2.0.0
                      , hspec-discover >= 2.0.0
                      , optparse-applicative
    ghc-options:        -O1 -threaded -rtsopts -with-rtsopts=-N
                      -j
                      +RTS -A32m -RTS
    default-language:   Haskell2010
    build-tool-depends: hspec-discover:hspec-discover